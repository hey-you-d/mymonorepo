name: Deploy to AWS Copilot

on:
  push:
    branches:
      - dev
      #- staging
      #- master

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Deployment environment based on branch
        run: |
          echo "GITHUB REF -> ${{ github.ref }}"
          if [[ "${{ github.ref }}" == "refs/heads/dev" ]]; then
            echo "DEPLOY_ENV=development" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            echo "DEPLOY_ENV=staging" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
            echo "DEPLOY_ENV=production" >> $GITHUB_ENV      
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag,& push docker image
        env: 
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          LOCAL_IMAGE_TAG=$(git rev-parse --short HEAD) 
          echo "Building image: mymonorepo-ecr-trial-0:$LOCAL_IMAGE_TAG "
          docker build -f dockerfile_nginx -t mymonorepo-ecr-trial-0:$LOCAL_IMAGE_TAG .

          echo "Verifying build image..."
          docker images | grep $LOCAL_IMAGE_TAG || echo "image not found!"

          echo "Tag the build image"
          docker tag mymonorepo-ecr-trial-0:$LOCAL_IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest

          echo "Verifying tagged build image..."
          docker images | grep $ECR_REGISTRY/$ECR_REPOSITORY:latest || echo "tagged image not found!"

          echo "Pushing image to ECR... $ECR_REGISTRY/$ECR_REPOSITORY:latest"
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest 

      - name: Deploy to Amazon Copilot 
        run: |
          curl -Lo copilot-cli https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux
          chmod +x copilot-cli
          sudo mv copilot-cli /usr/local/bin/copilot
          echo "Deploying to the following environment: $DEPLOY_ENV"
          copilot svc deploy --name ${{ secrets.ECS_SERVICE }} --env $DEPLOY_ENV \
          --force -- image $ECR_REGISTRY/$ECR_REPOSITORY:latest #pass explicit image     




