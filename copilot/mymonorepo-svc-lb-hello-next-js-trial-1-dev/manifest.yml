# The manifest for the "mymonorepo-svc-lb-hello-next-js-trial-1-dev" service.
# Read the full specification for the "Load Balanced Web Service" type at:
#  https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/

# Your service name will be used in naming your resources like log groups, ECS services, etc.
name: mymonorepo-svc-lb-hello-next-js-trial-1-dev
type: Load Balanced Web Service

# Distribute traffic to your service.
http:
  # Requests to this path will be forwarded to your service.
  # To match all requests you can use the "/" path.
  path: hello-next-js
  target_port: 3000
  # You can specify a custom health check path. The default is "/".
  healthcheck:
    path: /api/health
    port: 3000
    success_codes: "200,301"
    grace_period: 90s
    interval: 30s
    timeout: 10s

  additionalPaths:
    - '/_next/*'
    - '/static/*'
    - '/hello-next-js/_next/*'
    - '/hello-next-js/static/*'

# Configuration for your containers and service.
image:
  # Docker build arguments. For additional overrides: https://aws.github.io/copilot-cli/docs/manifest/lb-web-service/#image-build
  #build: dockerfile_hellonextjs_standalone_mode
  # get the docker image from the ECR instead. The associated docker image was pushed via the Github Action workflow.
  location: 120569641426.dkr.ecr.us-east-1.amazonaws.com/mymonorepo-app-trial-1/mymonorepo-svc-lb-hello-next-js-trial-1-dev:latest
  # Port exposed through your container to route traffic to it.
  port: 3000

cpu: 256       # Number of CPU units for the task.
memory: 512    # Amount of memory in MiB used by the task.
#count: 0      # !! for creating the service for the 1st time with copilot svc deploy, otherwise service creation will fail due to healtcheck failure !!
count: 1       # Number of tasks that should be running in your service.
exec: true     # Enable running commands in your container.
network:
  connect: true # Enable Service Connect for intra-environment traffic between services.

# alternatively, declare them in dockerfile (better practice to declare them here)
variables:
  PORT: "3000"
  HOSTNAME: "0.0.0.0"
  NEXT_TELEMETRY_DISABLED: "1"
  NODE_ENV: "production"
  JWT_SECRET_PROD_NAME: prod/hello-next-js/jwt-secret
  JWT_SECRET_DEV_NAME: dev/hello-next-js/jwt-secret

task_role_policy: |
  Version: '2012-10-17'
  Statement:
    - Effect: Allow
      Action:
        - ssm:GetParameter
        - ssm:GetParameters
      Resource: 
        - "arn:aws:ssm:us-east-1:120569641426:parameter/prod/tasks/bff/x-api-key"
        - "arn:aws:ssm:us-east-1:120569641426:parameter/supabase/db/password"
    - Effect: Allow
      Action:
        - secretsmanager:GetSecretValue
      Resource: 
        - "arn:aws:secretsmanager:us-east-1:120569641426:secret:prod/hello-next-js/jwt-secret-*"
        - "arn:aws:secretsmanager:us-east-1:120569641426:secret:dev/hello-next-js/jwt-secret-*"  

# storage:
  # readonly_fs: true       # Limit to read-only access to mounted root filesystems.

# Optional fields for more advanced use-cases.
#
#variables:                    # Pass environment variables as key value pairs.
#  LOG_LEVEL: info

#secrets:                      # Pass secrets from AWS Systems Manager (SSM) Parameter Store.
#  GITHUB_TOKEN: GITHUB_TOKEN  # The key is the name of the environment variable, the value is the name of the SSM parameter.

# You can override any of the values defined above by environment.
#environments:
#  test:
#    count: 2               # Number of tasks to run for the "test" environment.
#    deployment:            # The deployment strategy for the "test" environment.
#       rolling: 'recreate' # Stops existing tasks before new ones are started for faster deployments.