# === Stage 1: BASE BUILDING ===
# Set the base image for building
FROM node:18-alpine as base

# Set working directory
WORKDIR /app

# Install dependencies only for the workspace
COPY package.json yarn.lock ./

# Copy the entire monorepo project into the container
COPY . .

# Install dependencies using Yarn
RUN yarn install --frozen-lockfile

# Build the Next.JS standalone app (from the root folder)
RUN yarn workspace hello-next-js build

# === Stage 2: RUNTIME IMAGE ===
FROM base AS builder 

# Set the runner image
FROM node:18-alpine as runner

# Set the working directory
WORKDIR /app

# copy the build standalone files
# NOTE:
# 1. the trailing / at the end of standalone/ means only the contents inside standalone/ are copied, 
# not the standalone folder itself
# 2. This will correctly place files into the /app/ without duplicating myapps/hello-next-js
COPY --from=builder /app/myapps/hello-next-js/.next/standalone/myapps/hello-next-js/  /app/

# copy the required public and static folders
# NOTE: the trailing / at the end of the destination path ensures that the sources are copied directly
# into /app/myapps/hello-next-js/ without nesting another myapps/ folder 
COPY --from=builder /app/myapps/hello-next-js/public /app/public/
COPY --from=builder /app/myapps/hello-next-js/.next/static /app/.next/static/

# ensure node_modules exists for runtime
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/myapps/hello-next-js/node_modules ./node_modules

# === Stage 3 ===
# change ownership of the files to the node user
RUN chown -R node:node /app

# switch to non-root user - good practice
USER node

# add healthcheck for container monitoring
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
CMD wget --no-verbose --tries=1 --spider http://localhost:3000/api/health || exit 1

ENV PORT=3000
ENV HOSTNAME=0.0.0.0
ENV NEXT_TELEMETRY_DISABLED=1
#ENV NODE_ENV=production 

# Expose the default next.js port
EXPOSE 3000

# Because we are using node.js standalone mode structures, 
# start next.js standalone server
CMD ["node", "server.js"]
